{# dependencies #}
{% for file_name, class_name in dependencies.items() %}
import {{ "{" }} {{ class_name | capitalize}} {{ "}" }} from './{{file_name}}';
{% endfor %}

export interface {{name}} {{ "{" }}
    {% for property_name, property in properties.items() %}
    {{property_name}}{% if required is none %}?{% else %}{% if property_name not in required %}?{% endif %}{% endif %}: {{property['type']}}
    {% endfor %}

{{ "}" }}

{% if enums %}
export namespace {{name}} {{ "{" }}

    {% for enum_name, enumList in enums.items() %}
    export type {{enum_name | capitalize}}Enum = {% for enumValue in enumList %}'{{enumValue}}'{% if not loop.last %} {{ "|" }} {% endif %}{% endfor %};
    export const {{enum_name | capitalize}}Enum = {{ "{" }}
        {% for enumValue in enumList %}
        {{enumValue | capitalize}}: '{{enumValue}}' as {{enum_name | capitalize}}Enum{%if not loop.last %},
        {% endif %}{% endfor %}

    {{ "}" }}
    {% endfor %}
{{ "}" }}
{% endif %}